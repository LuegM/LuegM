<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Passkeys on LuegM üë®üèª‚Äçüíª</title>
    <link>http://localhost:1313/tags/passkeys/</link>
    <description>Recent content in Passkeys on LuegM üë®üèª‚Äçüíª</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 12 May 2023 10:11:20 +0100</lastBuildDate><atom:link href="http://localhost:1313/tags/passkeys/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Passkeys</title>
      <link>http://localhost:1313/posts/passkeys/</link>
      <pubDate>Fri, 12 May 2023 10:11:20 +0100</pubDate>
      
      <guid>http://localhost:1313/posts/passkeys/</guid>
      <description>Welcome to this comprehensive step-by-step tutorial designed to guide you through the process of setting up a backend environment for a passkeys using Docker Desktop. It will also guide you through the process of obtaining an Apple Developer Team-ID, a unique identifier required to manage your team on Apple&amp;rsquo;s Developer platform.
By the end of this tutorial, you&amp;rsquo;ll have a fully functional backend setup for your passkey workshop, and you&amp;rsquo;ll be capable of managing and running your applications more effectively.</description>
      <content:encoded><![CDATA[<p>Welcome to this comprehensive step-by-step tutorial designed to guide you through the process of setting up a backend environment for a passkeys using Docker Desktop.
It will also guide you through the process of obtaining an Apple Developer Team-ID, a unique identifier required to manage your team on Apple&rsquo;s Developer platform.</p>
<p>By the end of this tutorial, you&rsquo;ll have a fully functional backend setup for your passkey workshop, and you&rsquo;ll be capable of managing and running your applications more effectively.</p>
<p>Happy learning!</p>
<h3 id="1-install-docker-desktop">1. install Docker Desktop</h3>
<p><a href="https://www.docker.com/products/docker-desktop/">https://www.docker.com/products/docker-desktop/</a></p>
<h3 id="2-install-git">2. install Git</h3>
<p><a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></p>
<h3 id="3-get-apple-developer-team-id-optional">3. get Apple Developer Team-ID (Optional)</h3>
<p><a href="https://developer.apple.com/help/account/manage-your-team/locate-your-team-id/">https://developer.apple.com/help/account/manage-your-team/locate-your-team-id/</a></p>
<!-- raw HTML omitted -->
<h3 id="4-setup-the-backend">4. setup the backend</h3>
<h4 id="automated--script-macos-and-linux">automated / script (macOS and Linux):</h4>
<p><code>!! for windows scroll down</code></p>
<ol>
<li>Clone the repository</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git clone https://github.com/YubicoLabs/passkey-workshop
</span></span></code></pre></div><ol start="2">
<li>Navigate to the <em>deploy</em> folder</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> passkey-workshop/deploy
</span></span></code></pre></div><ol start="3">
<li>run the <em>mobile.sh</em> script</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">./cloudflared.sh
</span></span></code></pre></div><ol start="4">
<li>edit <em>.env</em> file
<ol>
<li>open the file</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">nano .env
</span></span></code></pre></div><ol start="2">
<li>make changes
<img loading="lazy" src="./images/pk_terminal_teamID.png" alt="TeamID"  />

<ol>
<li>if you have a Team-ID -&gt; add it here</li>
<li>if you don&rsquo;t have a Team-ID -&gt; change one character</li>
</ol>
</li>
</ol>
</li>
<li>run the <em>mobile.sh</em> script again</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">./cloudflared.sh
</span></span></code></pre></div><ol start="6">
<li>copy the url from the shell
<img loading="lazy" src="./images/pk_terminal_cf-url.png" alt="CloudFlareURL"  />
</li>
<li>open the url in a browser <code>(use https://)</code></li>
<li>go to the <em>TestPanel</em></li>
<li>you can now register and sign in with passkeys
<ol>
<li>note: only the TestPanel is working!</li>
</ol>
</li>
</ol>
<hr>
<h4 id="manual-windows">manual (windows):</h4>
<ol start="0">
<li>start <strong>Powershell</strong></li>
<li>Clone the repository</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git clone https://github.com/YubicoLabs/passkey-workshop
</span></span></code></pre></div><ol start="2">
<li>Navigate to the <em>deploy</em> folder</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> passkey-workshop/deploy
</span></span></code></pre></div><ol start="3">
<li>Copy the environment file</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">cp cloudflared.env .env
</span></span></code></pre></div><ol start="4">
<li>Copy the frontend code</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">cp -r ../examples/clients/web/react/passkey-client/ react-app/source
</span></span></code></pre></div><ol start="5">
<li><em>(optional)</em> Edit the <em>apple-app-site-association</em> file with your Apple TeamID.</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">nano react-app/source/public/.well-known/apple-app-site-association
</span></span></code></pre></div><pre tabindex="0"><code>{
    &#34;webcredentials&#34;: {
      &#34;apps&#34;: [
        &#34;UVWXYZ1234.fyi.passkey.pawskeyUVWXYZ1234&#34;
      ]
    }
}
</code></pre><ol start="6">
<li>Build the <em>passkey-client</em></li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker compose build passkey-client
</span></span></code></pre></div><ol start="7">
<li>Copy the backend code</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">cp -r ../examples/relyingParties/java-spring/ java-app/source/
</span></span></code></pre></div><ol start="8">
<li>Start your tunnel</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker compose --profile tunnel up -d
</span></span></code></pre></div><ol start="9">
<li>Lookup the tunnel URL in cloudflared&rsquo;s output, either in Docker Desktop or using</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker compose --profile tunnel logs
</span></span></code></pre></div><pre tabindex="0"><code>*example log:*
INF +--------------------------------------------------------------------------------------+
INF | Your quick Tunnel has been created! Visit it at (it may take some time to be reachable): |
INF | https://your-proxied-tunnel-endpoint.trycloudflare.com                                                       |
INF +--------------------------------------------------------------------------------------+
</code></pre><ol start="10">
<li>Edit your .env file and set the values of <code>RP_ID</code>, <code>RP_ALLOWED_ORIGINS</code>, and <code>RP_ALLOWED_CROSS_ORIGINS</code> to your assigned hostname</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nv">RP_ID</span><span class="o">=</span>replace-with-your-hostname.trycloudflare.com
</span></span><span class="line"><span class="cl"><span class="nv">RP_ALLOWED_ORIGINS</span><span class="o">=</span>replace-with-your-hostname.trycloudflare.com
</span></span><span class="line"><span class="cl"><span class="nv">RP_ALLOWED_CROSS_ORIGINS</span><span class="o">=</span>replace-with-your-hostname.trycloudflare.com
</span></span></code></pre></div><p>Also edit the URL for your RP backend API so it includes your tunnel hostname</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nv">REACT_APP_API</span><span class="o">=</span>https://replace-with-your-hostname.trycloudflare.com/v1
</span></span></code></pre></div><ol start="11">
<li>run</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker compose --profile mobile up -d
</span></span></code></pre></div><ol start="12">
<li>open the url in a browser</li>
<li>go to the <em>TestPanel</em></li>
<li>you can now register and sign in with passkeys
<ol>
<li>note: only the TestPanel is working!</li>
</ol>
</li>
</ol>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
